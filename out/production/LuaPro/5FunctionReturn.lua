---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wangyu.
--- DateTime: 2019-2-14 17:59
---

---多个返回值
str = "hello lua users"
local x, y = string.find(str, "lua")--lua的收尾字母所在的索引， 索引从1开始， 两个返回值
print(x, y)

function maxIndexAndValue(tt)
    local maxValue = nil
    local maxIndex = nil
    for i = 1, #tt do
        if maxValue == nil then
            maxValue = tt[i]
        end
        if maxValue < tt[i] then
            maxValue = tt[i]
            maxIndex = i
        end
    end
    return maxIndex, maxValue--返回两个值
end
local tt = { 1, 200, 30, 4 }
print(maxIndexAndValue(tt))

---多个返回值出现在表达式中的时候，会只保留1个
function t1()
    return "a", "b"
end
print(t1())
print("看返回的个数", (t1()))--当一个多返回值函数被()包围时，他会强制只返回1个参数
local abc = t1() .. "c"
print(abc);--只返回了a和c组合

---将多返回值存储到table中，只有作为table的最后一个元素时，才会全部放到table里，不然只放1个
print("-----------for table-----------")
tb = { 1, t1() }
tb1 = { t1(), 1 }
for i, v in ipairs(tb) do
    print(i, v)
end
print('----')
for i, v in ipairs(tb1) do
    print(i, v)
end

---unpack作为可变参数在函数中的使用
print("------table.unpack(返回下标从1开始，连续的数)-------")
tb2 = { x = 1, 10, "100" , [1000] = 1000}
print(table.unpack(tb2))
f = string.find--将一个函数赋值给一个参数
ax = { "hello", "ll" }
print(f(table.unpack(ax)))
